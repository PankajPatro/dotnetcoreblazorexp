<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netcoreapp2.0</TargetFrameworks>
    <OutputType>Exe</OutputType>
    <OutDir>tools</OutDir> <!-- So we can use the tool from source within the repo without having to pack -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>

  <!-- Pack settings -->
  <PropertyGroup>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <NuspecFile>Microsoft.AspNetCore.Blazor.Build.nuspec</NuspecFile>
    <IntermediatePackDir>$(MSBuildProjectDirectory)/bin/$(Configuration)/publish/</IntermediatePackDir>
    <PublishDir>$(IntermediatePackDir)$(TargetFramework)/</PublishDir>
  </PropertyGroup>

  <!-- Executes /t:Publish for all target frameworks before packing-->
  <Target Name="PublishAll" BeforeTargets="_IntermediatePack">
    <PropertyGroup>
      <CopyLocalLockFileAssemblies>false</CopyLocalLockFileAssemblies>
      <NuspecProperties>version=$(PackageVersion);publishDir=$([MSBuild]::NormalizeDirectory($(IntermediatePackDir)))</NuspecProperties>
    </PropertyGroup>
    <ItemGroup>
      <_TargetFramework Include="$(TargetFrameworks)" />
    </ItemGroup>
    <MSBuild Projects="$(MSBuildProjectFullPath)" Targets="Publish" Properties="TargetFramework=%(_TargetFramework.Identity)" />
  </Target>

  <!-- Our build tools and nuget don't play well together with hand-authoring a .nuspec -->
  <Target Name="_GetArtifactInfoWorkaround" AfterTargets="GetSignedPackageFiles">
    <ItemGroup>
      <ArtifactInfo Include="$(PackageOutputPath)$(PackageId).$(PackageVersion).symbols.nupkg">
        <ArtifactType>NuGetSymbolsPackage</ArtifactType>
        <PackageId>$(PackageId)</PackageId>
        <Version>$(PackageVersion)</Version>
        <TargetFramework>$(TargetFramework)</TargetFramework>
        <TargetFrameworks>$([MSBuild]::Escape($(TargetFrameworks)))</TargetFrameworks>
        <SourceIncluded>$(IncludeSource)</SourceIncluded>
        <PackageType>$(PackageType)</PackageType>
        <RepositoryRoot>$(RepositoryRoot)</RepositoryRoot>
        <RepositoryUrl>$(RepositoryUrl)</RepositoryUrl>
        <Category>$(PackageArtifactCategory)</Category>
        <Certificate>$(PackageSigningCertName)</Certificate>
        <ShouldBeSigned Condition="'$(PackageSigningCertName)' != '' OR @(SignedPackageFile->Count()) != 0 ">true</ShouldBeSigned>
        <ShouldBeSigned Condition=" '$(DisableCodeSigning)' == 'true' ">false</ShouldBeSigned>
        <IsContainer>true</IsContainer>
      </ArtifactInfo>
    </ItemGroup>
  </Target>
  <ItemGroup>
    <None Remove="tools\**" />
  </ItemGroup>

  <ItemGroup>
    <!-- This is a newer version than is in the shared framework, so copy it -->
    <Content Include="..\Microsoft.AspNetCore.Blazor.Razor.Extensions\bin\$(Configuration)\netcoreapp2.0\Microsoft.AspNetCore.Razor.Language.dll">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Microsoft.AspNetCore.Blazor.Browser.JS\Microsoft.AspNetCore.Blazor.Browser.JS.csproj" />
    <ProjectReference Include="..\Microsoft.AspNetCore.Blazor.Razor.Extensions\Microsoft.AspNetCore.Blazor.Razor.Extensions.csproj" />
    <ProjectReference Include="..\Microsoft.AspNetCore.Blazor\Microsoft.AspNetCore.Blazor.csproj" />
    <PackageReference Include="Microsoft.Extensions.CommandLineUtils" Version="1.1.1" />
    <PackageReference Include="Microsoft.Extensions.FileProviders.Composite" Version="2.0.0" />
    <PackageReference Include="Microsoft.Extensions.FileProviders.Physical" Version="2.0.0" />
    <PackageReference Include="Mono.Cecil" Version="0.10.0-beta7" />
    <PackageReference Include="System.CodeDom" Version="4.4.0" />
  </ItemGroup>

  <ItemGroup>
    <Reference Include="..\anglesharp\AngleSharpBuilder\dist\Microsoft.AspNetCore.Blazor.AngleSharp.dll" />
  </ItemGroup>
</Project>
